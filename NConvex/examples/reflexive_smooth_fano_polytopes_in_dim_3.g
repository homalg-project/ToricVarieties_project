LoadPackage( "NConvex" );
vertices := [ [ [ 1, 1, 0 ], 
         [ 1, 0, 0 ], 
         [ 0, 1, -1 ], 
         [ 1, -2, 1 ], 
         [ 1, 1, 1 ], 
         [ 0, 1, 1 ], 
         [ 0, -3, 1 ], 
         [ -4, 1, -3 ] ], 

      [  [ 1, 1, -1 ], 
         [ 1, 1, 1 ], 
         [ -4, 1, 1 ], 
         [ 1, -4, 1 ], 
         [ 0, 1, -1 ], 
         [ 1, 0, -1 ] ], 

      [  [ 0, 1, -1 ], 
         [ 0, 0, -1 ], 
         [ 1, 1, 1 ], 
         [ 1, -1, 1 ], 
         [ 1, 0, 0 ], 
         [ 1, 1, 0 ], 
         [ -1, 1, 1 ], 
         [ -1, -3, 1 ], 
         [ -1, -1, -1 ], 
         [ -1, 1, -1 ] ], 
  
      [  [ 0, -2, 1 ], 
         [ 0, 1, 1 ], 
         [ 1, 1, 0 ], 
         [ 1, 0, 0 ], 
         [ 1, -1, 1 ], 
         [ 1, 1, 1 ], 
         [ 0, 0, -1 ], 
         [ 0, 1, -1 ], 
         [ -1, 1, -1 ], 
         [ -1, -1, -1 ], 
         [ -1, -2, 0 ], 
         [ -1, 1, 0 ] ],

      [  [ 0, 1, -1 ], 
         [ 0, 0, -1 ], 
         [ 1, 1, 1 ], 
         [ 1, -1, 1 ], 
         [ 1, 0, 0 ], 
         [ 1, 1, 0 ], 
         [ 0, 1, 1 ], 
         [ 0, -2, 1 ], 
         [ -2, -2, -1 ], 
         [ -2, 1, -1 ] ],
     
      [  [ 1, 0, -1 ], 
         [ 1, -2, 1 ], 
         [ 1, 1, 1 ], 
         [ 1, 1, -1 ], 
         [ -2, 1, 1 ], 
         [ 0, 1, -1 ], 
         [ -2, -2, 1 ], 
         [ 0, 0, -1 ] ], 

      [  [ 1, 1, 0 ], 
         [ 1, 0, -1 ], 
         [ 1, 0, 1 ], 
         [ 1, 1, 1 ], 
         [ -1, 1, 0 ], 
         [ -1, 1, 1 ], 
         [ -1, -2, 1 ], 
         [ -1, -2, -3 ] ], 

      [  [ 0, -2, 1 ], 
         [ 0, 1, 1 ], 
         [ 1, 1, 1 ], 
         [ 1, -1, 1 ], 
         [ 1, 0, 0 ], 
         [ 1, 1, 0 ], 
         [ -1, 0, -2 ], 
         [ -1, 1, -2 ], 
         [ -1, 1, 0 ], 
         [ -1, -2, 0 ] ], 
   
      [  [ 1, -1, 0 ], 
         [ 1, 0, -1 ], 
         [ 1, 1, -1 ], 
         [ 1, 1, 1 ], 
         [ 1, -1, 1 ], 
         [ -1, 1, 1 ], 
         [ -1, 1, -1 ], 
         [ -1, -1, 1 ], 
         [ -1, 0, -1 ], 
         [ -1, -1, 0 ] ], 
   
      [  [ 1, -1, 0 ], 
         [ 1, -1, -1 ], 
         [ 1, 0, -1 ], 
         [ 1, 1, 1 ], 
         [ 1, 1, 0 ], 
         [ 1, 0, 1 ], 
         [ -1, 1, 0 ], 
         [ -1, 1, 1 ], 
         [ -1, 0, -1 ], 
         [ -1, 0, 1 ], 
         [ -1, -1, -1 ], 
         [ -1, -1, 0 ] ], 
   
      [  [ 1, 1, -2 ], 
         [ -2, 1, 1 ], 
         [ 1, 1, 1 ], 
         [ 1, -1, 1 ], 
         [ 1, -1, -1 ], 
         [ -1, -1, 1 ], 
         [ -2, 0, 1 ], 
         [ 1, 0, -2 ] ],
         
       [ [ 1, 0, -1 ], 
         [ 1, -2, 1 ], 
         [ 1, 1, 1 ], 
         [ 1, 1, -1 ], 
         [ -1, 1, 1 ], 
         [ -1, 1, -1 ], 
         [ -1, -2, 1 ], 
         [ -1, 0, -1 ] ], 

       [ [ 1, 0, -1 ],
         [ 1, -2, 1 ], 
         [ 1, 1, 1 ], 
         [ 1, 1, -1 ], 
         [ 0, 1, 1 ], 
         [ -2, 1, -1 ], 
         [ 0, -2, 1 ], 
         [ -2, 0, -1 ] ], 

      [  [ 1, 0, 1 ], 
         [ 1, 1, 1 ], 
         [ 1, 0, -2 ], 
         [ 1, 1, -2 ], 
         [ -2, 1, 1 ], 
         [ -2, -3, 1 ] ], 
    
     [   [ 1, 1, -1 ], 
         [ 1, 1, 1 ], 
         [ -3, 1, 1 ], 
         [ 1, -3, 1 ], 
         [ -1, 1, -1 ], 
         [ 1, -1, -1 ] ], 
         
       [ [ 1, -1, -1 ], 
         [ 1, -1, 1 ], 
         [ 1, 1, 1 ], 
         [ 1, 1, -1 ], 
         [ -1, 1, 1 ], 
         [ -1, 1, -1 ], 
         [ -1, -1, 1 ], 
         [ -1, -1, -1 ] ], 
         
       [ [ 1, -1, 1 ], 
         [ 1, 1, 1 ], 
         [ -2, 1, 1 ], 
         [ 1, 1, -2 ], 
         [ -2, -1, 1 ], 
         [ 1, -1, -2 ] ], 

      [  [ 1, 1, 1 ], 
         [ -3, 1, 1 ], 
         [ 1, -3, 1 ], 
         [ 1, 1, -3 ] ] ];

reflexive_polytopes := List( vertices, Polytope );
smooth_fano_polytopes := List( reflexive_polytopes, PolarPolytope );

Display( List( reflexive_polytopes, IsReflexive ) );
Display( List( smooth_fano_polytopes, IsSmoothFanoPolytope ) );


